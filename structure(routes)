const express = require('express');
const bcrypt = require('bcrypt');
const jwt = require('jsonwebtoken');
const Student = require('../models/Student');
const Staff = require('../models/Staff');
const authenticateJWT = require('../middleware/authenticateJWT');

const router = express.Router();

// Student login
router.post('/student-login', async (req, res) => {
    const { email, password } = req.body;
    try {
        const student = await Student.findOne({ email });
        if (!student || !await bcrypt.compare(password, student.password)) {
            return res.status(401).send('Invalid credentials');
        }
        const token = jwt.sign({ email: student.email, role: 'student' }, 'your-secret-key');
        res.json({ token });
    } catch (error) {
        res.status(500).send('Server error');
    }
});

// Staff login
router.post('/staff-login', async (req, res) => {
    const { email, password } = req.body;
    try {
        const staff = await Staff.findOne({ email });
        if (!staff || !await bcrypt.compare(password, staff.password)) {
            return res.status(401).send('Invalid credentials');
        }
        const token = jwt.sign({ email: staff.email, role: staff.role }, 'your-secret-key');
        res.json({ token });
    } catch (error) {
        res.status(500).send('Server error');
    }
});

module.exports = router;
